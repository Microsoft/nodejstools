<?xml version='1.0' encoding='UTF-8'?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LaunchUrlToolTip" xml:space="preserve">
    <value>브라우저에서 열 URL을 지정합니다. 지정하지 않으면 http://localhost:port가 사용됩니다.\r\n포트를 지정하는 경우 마찬가지로 여기에 지정해야 합니다.</value>
  </data>
  <data name="NodeExeArguments" xml:space="preserve">
    <value>Node.exe에 대한 인수</value>
  </data>
  <data name="NodeExeArgumentsDescription" xml:space="preserve">
    <value>Node.exe에 제공되는 옵션을 지정합니다(예: -e 또는 -i).</value>
  </data>
  <data name="NodeExeArgumentsToolTip" xml:space="preserve">
    <value>Node.exe에 제공되는 옵션을 지정합니다(예: -e 또는 -i).</value>
  </data>
  <data name="NodeExePath" xml:space="preserve">
    <value>Node.exe 경로</value>
  </data>
  <data name="NodeExePathToolTip" xml:space="preserve">
    <value>Node.exe 실행 파일의 경로를 지정합니다.</value>
  </data>
  <data name="NodejsPort" xml:space="preserve">
    <value>Node.js 포트</value>
  </data>
  <data name="NodejsNotInstalled" xml:space="preserve">
    <value>컴퓨터에서 Node.js 런타임을 찾을 수 없습니다. https://nodejs.org에서 최신 Node.js 릴리스를 다운로드하여 설치하거나 Visual Studio 노드 프로젝트의 속성 페이지에서 Node.exe의 위치를 지정하세요.</value>
  </data>
  <data name="NodejsPortToolTip" xml:space="preserve">
    <value>process.env.port에 사용되는 포트를 지정합니다. 지정하지 않으면 임의의 포트가 생성됩니다.</value>
  </data>
  <data name="NpmPackageName" xml:space="preserve">
    <value>패키지 이름</value>
  </data>
  <data name="NpmPackageNameDescription" xml:space="preserve">
    <value>해당 package.json에 지정된 패키지 이름입니다.</value>
  </data>
  <data name="NpmPackageVersion" xml:space="preserve">
    <value>버전</value>
  </data>
  <data name="NpmPackageVersionDescription" xml:space="preserve">
    <value>설치된 패키지 버전입니다.</value>
  </data>
  <data name="NpmPackageRequestedVersionRange" xml:space="preserve">
    <value>요청된 버전</value>
  </data>
  <data name="NpmPackageRequestedVersionRangeDescription" xml:space="preserve">
    <value>부모 패키지 또는 프로젝트에 속한 package.json에서 요청된 패키지 버전입니다.</value>
  </data>
  <data name="NpmPackageNewVersionAvailable" xml:space="preserve">
    <value>새 버전 사용 가능</value>
  </data>
  <data name="NpmPackageNewVersionAvailableDescription" xml:space="preserve">
    <value>최신 버전의 패키지를 사용할 수 있는지 여부를 나타냅니다.</value>
  </data>
  <data name="NpmPackageDescription" xml:space="preserve">
    <value>설명</value>
  </data>
  <data name="NpmPackageDescriptionDescription" xml:space="preserve">
    <value>패키지 설명입니다.</value>
  </data>
  <data name="NpmPackageKeywords" xml:space="preserve">
    <value>키워드</value>
  </data>
  <data name="NpmPackageKeywordsDescription" xml:space="preserve">
    <value>패키지 키워드입니다.</value>
  </data>
  <data name="NpmPackageAuthor" xml:space="preserve">
    <value>만든 이</value>
  </data>
  <data name="NpmPackageAuthorDescription" xml:space="preserve">
    <value>패키지의 기본 또는 원래 만든 이입니다. 추가 참가자가 있을 수도 있습니다.</value>
  </data>
  <data name="NpmPackagePath" xml:space="preserve">
    <value>경로</value>
  </data>
  <data name="NpmPackagePathDescription" xml:space="preserve">
    <value>디스크에서 패키지의 위치입니다.</value>
  </data>
  <data name="NpmPackageType" xml:space="preserve">
    <value>패키지 형식</value>
  </data>
  <data name="NpmPackageTypeDescription" xml:space="preserve">
    <value>패키지가 전역인지 또는 프로젝트에 로컬로 설치되었는지와 하위 패키지인지 여부를 나타냅니다.</value>
  </data>
  <data name="NpmPackageLinkStatus" xml:space="preserve">
    <value>링크 상태</value>
  </data>
  <data name="NpmPackageLinkStatusDescription" xml:space="preserve">
    <value>패키지가 전역으로 설치된 패키지에서 연결되어 있는지 여부를 나타냅니다.</value>
  </data>
  <data name="NpmPackageIsListedInParentPackageJson" xml:space="preserve">
    <value>종속성으로 나열됨</value>
  </data>
  <data name="NpmPackageIsListedInParentPackageJsonDescription" xml:space="preserve">
    <value>패키지가 package.json 종속성으로 나열되어 있는지 여부를 나타냅니다.</value>
  </data>
  <data name="NpmPackageIsMissing" xml:space="preserve">
    <value>누락됨</value>
  </data>
  <data name="NpmPackageIsMissingDescription" xml:space="preserve">
    <value>패키지가 누락된 종속성인지 여부를 나타냅니다.</value>
  </data>
  <data name="NpmPackageIsDevDependency" xml:space="preserve">
    <value>개발 종속성</value>
  </data>
  <data name="NpmPackageIsDevDependencyDescription" xml:space="preserve">
    <value>패키지가 개발 종속성인지 여부를 나타냅니다.</value>
  </data>
  <data name="NpmPackageIsOptionalDependency" xml:space="preserve">
    <value>선택적 종속성</value>
  </data>
  <data name="NpmPackageIsOptionalDependencyDescription" xml:space="preserve">
    <value>패키지가 선택적 종속성인지 여부를 나타냅니다.</value>
  </data>
  <data name="NpmPackageIsBundledDependency" xml:space="preserve">
    <value>포함된 종속성</value>
  </data>
  <data name="NpmPackageIsBundledDependencyDescription" xml:space="preserve">
    <value>패키지가 포함된 종속성인지 여부를 나타냅니다.</value>
  </data>
  <data name="CategoryVersion" xml:space="preserve">
    <value>버전</value>
  </data>
  <data name="CategoryStatus" xml:space="preserve">
    <value>상태</value>
  </data>
  <data name="PackageTypeLocal" xml:space="preserve">
    <value>로컬</value>
  </data>
  <data name="PackageTypeLocalSubpackage" xml:space="preserve">
    <value>로컬 하위 패키지</value>
  </data>
  <data name="LinkStatusNotApplicableSubPackages" xml:space="preserve">
    <value>하위 패키지에 적용되지 않습니다.</value>
  </data>
  <data name="LinkStatusUnknown" xml:space="preserve">
    <value>알 수 없음</value>
  </data>
  <data name="RequestedVersionRangeNone" xml:space="preserve">
    <value>없음</value>
  </data>
  <data name="NpmNodePackageInstallation" xml:space="preserve">
    <value>패키지 설치</value>
  </data>
  <data name="NpmNodePackageInstallationDescription" xml:space="preserve">
    <value>노드에서 로컬 또는 전역 npm 패키지 설치 중 무엇을 관리하는지를 나타냅니다.</value>
  </data>
  <data name="NpmNodePath" xml:space="preserve">
    <value>경로</value>
  </data>
  <data name="NpmNodePathDescription" xml:space="preserve">
    <value>Npm 패키지가 설치되어 있는 기본 경로입니다.</value>
  </data>
  <data name="PackageInstallationLocal" xml:space="preserve">
    <value>로컬</value>
  </data>
  <data name="PropertiesClassLocalPackage" xml:space="preserve">
    <value>로컬 패키지 속성</value>
  </data>
  <data name="PropertiesClassLocalSubPackage" xml:space="preserve">
    <value>로컬 하위 패키지 속성</value>
  </data>
  <data name="PropertiesClassNpm" xml:space="preserve">
    <value>Npm 패키지 속성</value>
  </data>
  <data name="ScriptArgumentsToolTip" xml:space="preserve">
    <value>시작할 때 스크립트에 전달되는 인수를 지정합니다.</value>
  </data>
  <data name="ScriptFileTooltip" xml:space="preserve">
    <value>시작할 때 실행되는 스크립트를 지정합니다.</value>
  </data>
  <data name="StartBrowserToolTip" xml:space="preserve">
    <value>선택한 경우 시작할 때 웹 브라우저가 열립니다.</value>
  </data>
  <data name="WorkingDirToolTip" xml:space="preserve">
    <value>Node.exe 프로세스가 시작되는 작업 디렉터리를 지정합니다.</value>
  </data>
  <data name="NodeExeDoesntExist" xml:space="preserve">
    <value>프로젝트가 &quot;{0}&quot;에서 Node.exe를 찾도록 구성되어 있지만 파일이 없습니다.</value>
  </data>
  <data name="NodejsToolsForVisualStudio" xml:space="preserve">
    <value>Visual Studio용 Node.js 도구</value>
  </data>
  <data name="NodeExePathNotFound" xml:space="preserve">
    <value>지정된 Node.js 해석기가 없습니다.</value>
  </data>
  <data name="NodejsNotInstalledShort" xml:space="preserve">
    <value>Node.js가 컴퓨터에서 검색되지 않았습니다.</value>
    <comment>Used in general property page when Node.exe isn't found</comment>
  </data>
  <data name="InvalidPortNumber" xml:space="preserve">
    <value>잘못된 포트 번호 - 포트에 숫자만 포함해야 합니다.</value>
  </data>
  <data name="WorkingDirInvalidOrMissing" xml:space="preserve">
    <value>지정된 작업 디렉터리가 잘못되었거나 없습니다.</value>
  </data>
  <data name="CatalogLoadingDefault" xml:space="preserve">
    <value>게시된 패키지 목록을 로드하는 중...</value>
  </data>
  <data name="NoKeywordsInPackage" xml:space="preserve">
    <value>(이 패키지에 키워드가 없습니다.)</value>
  </data>
  <data name="PackageCatalogRefreshing" xml:space="preserve">
    <value>현재 새로 고치는 중</value>
  </data>
  <data name="PackageCatalogRefresh0Days" xml:space="preserve">
    <value>오늘 {0:t}</value>
  </data>
  <data name="PackageCatalogRefresh1Day" xml:space="preserve">
    <value>어제 {0:t}에</value>
  </data>
  <data name="PackageCatalogRefresh2To7Days" xml:space="preserve">
    <value>{0}일 전</value>
  </data>
  <data name="PackageCatalogRefresh1Week" xml:space="preserve">
    <value>1주 이상 전</value>
  </data>
  <data name="PackageCatalogRefresh2Weeks" xml:space="preserve">
    <value>2주 이상 전</value>
  </data>
  <data name="PackageCatalogRefresh3Weeks" xml:space="preserve">
    <value>3주 이상 전</value>
  </data>
  <data name="PackageCatalogRefresh1Month" xml:space="preserve">
    <value>1개월 이상 전</value>
  </data>
  <data name="PackageCatalogRefresh3Months" xml:space="preserve">
    <value>3개월 이상 전</value>
  </data>
  <data name="NpmCancelledWithErrors" xml:space="preserve">
    <value>{0}이(가) 오류로 인해 취소됨 - 자세한 내용은 출력 창 참조</value>
  </data>
  <data name="NpmCompletedWithErrors" xml:space="preserve">
    <value>{0}이(가) 완료되었지만 오류 있음 - 자세한 내용은 출력 창 참조</value>
  </data>
  <data name="NpmCancelled" xml:space="preserve">
    <value>{0}이(가) 취소됨</value>
  </data>
  <data name="NpmSuccessfullyCompleted" xml:space="preserve">
    <value>{0}이(가) 완료됨</value>
  </data>
  <data name="NpmStatusReady" xml:space="preserve">
    <value>준비됨</value>
  </data>
  <data name="NpmStatusReadyWithErrors" xml:space="preserve">
    <value>준비됨 - 명령이 완료되었지만 오류 발생({0})</value>
  </data>
  <data name="NpmStatusExecuting" xml:space="preserve">
    <value>실행 중: {0}</value>
  </data>
  <data name="NpmStatusExecutingQueued" xml:space="preserve">
    <value>실행 중: {0}({1}개 명령이 큐에 대기됨)</value>
  </data>
  <data name="NpmStatusExecutingErrors" xml:space="preserve">
    <value>오류 발생({1}) - 실행 중: {0}</value>
  </data>
  <data name="NpmStatusExecutingQueuedErrors" xml:space="preserve">
    <value>오류 발생({2}) - 실행 중: {0}({1}개 명령 큐에 대기됨)</value>
  </data>
  <data name="TestFramework" xml:space="preserve">
    <value>테스트 프레임워크</value>
  </data>
  <data name="TestFrameworkDescription" xml:space="preserve">
    <value>이 파일이 적용되는 테스트 프레임워크를 지정합니다.</value>
  </data>
  <data name="DebuggerPort" xml:space="preserve">
    <value>디버거와 통신하는 데 사용되는 포트를 지정합니다.</value>
  </data>
  <data name="EnvironmentVariables" xml:space="preserve">
    <value>생성된 프로세스에서 설정할 환경 변수를 다음 형식으로 지정합니다.

NAME1=value1
NAME2=value2
...</value>
  </data>
  <data name="DebuggerConnectionClosed" xml:space="preserve">
    <value>디버거 연결이 닫혔습니다.</value>
  </data>
  <data name="DebuggerModuleUpdateFailed" xml:space="preserve">
    <value>파일 콘텐츠를 업데이트하지 못했습니다.</value>
  </data>
  <data name="NodejsNotSupported" xml:space="preserve">
    <value>이 버전의 Node.js({0})는 지원되지 않습니다. Node.js v0.10.20 이상 버전으로 업그레이드하세요.</value>
  </data>
  <data name="PackageCatalogRefreshFailed" xml:space="preserve">
    <value>새로 고침 실패 - 자세한 내용은 아래 출력 참조</value>
  </data>
  <data name="ReplInitializationMessage" xml:space="preserve">
    <value>Node.js 대화형 창입니다. 명령 목록을 보려면 .help를 입력하세요.</value>
  </data>
  <data name="ReplWindowNpmInitNoYesFlagWarning" xml:space="preserve">
    <value>&apos;.npm init -y&apos;를 실행하여 새 package.json 파일을 만드세요.</value>
  </data>
  <data name="NodeExePathDescription" xml:space="preserve">
    <value>Node.exe 실행 파일의 경로를 지정합니다.</value>
  </data>
  <data name="NodejsPortDescription" xml:space="preserve">
    <value>process.env.port에 사용되는 포트를 지정합니다. 지정하지 않으면 임의의 포트가 생성됩니다.</value>
  </data>
  <data name="NpmOutputPaneTitle" xml:space="preserve">
    <value>Npm</value>
  </data>
  <data name="NpmPackageInstallHelpMessage" xml:space="preserve">
    <value>(위 인수 입력)</value>
  </data>
  <data name="NpmReplCommandCompletedWithErrors" xml:space="preserve">
    <value>{0}이(가) 완료되었지만 오류 발생</value>
  </data>
  <data name="LongPathWarningTitle" xml:space="preserve">
    <value>경로가 너무 김 경고</value>
  </data>
  <data name="LongPathWarningText" xml:space="preserve">
    <value>프로젝트 폴더에 &lt;a href=&quot;#msdn&quot;&gt;260자 제한&lt;/a&gt;을 초과하는 경로가 하나 이상 포함되어 있습니다. Visual Studio에서는 이러한 프로젝트를 &lt;a href=&quot;#uservoice&quot;&gt;완전하게 지원하지 않습니다&lt;/a&gt;. 프로젝트를 빌드 및 게시하는 데 문제가 발생하거나 다른 Visual Studio 및 Node.js 도구 기능에 방해가 될 수 있습니다.</value>
  </data>
  <data name="LongPathShowPathsExceedingTheLimit" xml:space="preserve">
    <value>제한을 초과하는 경로 표시(&amp;P)</value>
  </data>
  <data name="LongPathHidePathsExceedingTheLimit" xml:space="preserve">
    <value>제한을 초과하는 경로 숨기기(&amp;P)</value>
  </data>
  <data name="LongPathNpmDedupe" xml:space="preserve">
    <value>프로젝트에서 &apos;npm dedupe&apos; 실행(&amp;D)</value>
  </data>
  <data name="LongPathNpmDedupeDetail" xml:space="preserve">
    <value>경우에 따라 패키지 중복을 제거하면 문제를 해결할 수 있을 정도로 node_modules의 중첩 양을 줄일 수 있습니다.</value>
  </data>
  <data name="LongPathDoNothingButWarnNextTime" xml:space="preserve">
    <value>아무 작업도 하지 않지만 다음번에 발생할 경우 경고(&amp;W)</value>
  </data>
  <data name="LongPathDoNothingAndDoNotWarnAgain" xml:space="preserve">
    <value>아무 작업도 하지 않으며 경고를 다시 표시 안 함(&amp;N)</value>
  </data>
  <data name="LongPathDoNothingAndDoNotWarnAgainDetail" xml:space="preserve">
    <value>[도구] → [옵션] → [Node.js 도구] → [일반]에서 확인을 다시 사용하도록 설정할 수 있습니다.</value>
  </data>
  <data name="LongPathFooter" xml:space="preserve">
    <value>&lt;a href=&quot;#help&quot;&gt;자세한 정보 보기&lt;/a&gt;</value>
  </data>
  <data name="LongPathClickToCopy" xml:space="preserve">
    <value>전체 경로 복사</value>
  </data>
  <data name="LongPathNpmDedupeDidNotHelp" xml:space="preserve">
    <value>&apos;npm dedupe&apos; 실행으로 문제가 해결되지 않았습니다. 다른 가능한 해결 방법은 &lt;a href=&quot;#help&quot;&gt;설명서&lt;/a&gt;를 참조하세요.</value>
  </data>
  <data name="CacheDirectoryClearFailedTitle" xml:space="preserve">
    <value>Node.js 캐시 디렉터리를 지울 수 없음</value>
  </data>
  <data name="CacheDirectoryClearFailedCaption" xml:space="preserve">
    <value>Node.js 캐시 디렉터리를 지울 수 없습니다. 다음 디렉터리를 수동으로 삭제해 보세요. {0}</value>
  </data>
  <data name="UpgradedEnvironmentVariables" xml:space="preserve">
    <value>&lt;EnvironmentVariables&gt; 속성을 &lt;Environment&gt;로 바꾸었습니다. NTVS 1.0 베타 2 이하에서는 이 프로젝트가 더 이상 작동하지 않습니다.</value>
  </data>
  <data name="StatusAnalysisUpToDate" xml:space="preserve">
    <value>Node.js 코드 분석이 최신 상태이며 {1}에 {0:N0}개의 함수를 분석했습니다.</value>
  </data>
  <data name="IncludeNodeModulesCancelTitle" xml:space="preserve">
    <value>아무 작업도 하지 않음(권장)</value>
  </data>
  <data name="IncludeNodeModulesContent" xml:space="preserve">
    <value>프로젝트에 &apos;node_modules&apos;를 포함하는 작업은 일반적으로 필요하지 않으며 Visual Studio 성능을 떨어뜨릴 수 있습니다. &apos;node_modules&apos;를 프로젝트에 포함하지 않아도 계속 &apos;node_modules&apos;에서 패키지를 사용 및 배포할 수 있습니다.</value>
  </data>
  <data name="IncludeNodeModulesIncludeDescription" xml:space="preserve">
    <value>이 작업은 오래 걸릴 수 있으며, 그동안 Visual Studio를 사용할 수 없습니다.</value>
  </data>
  <data name="IncludeNodeModulesIncludeTitle" xml:space="preserve">
    <value>프로젝트에 &apos;node_modules&apos; 폴더 포함</value>
  </data>
  <data name="IncludeNodeModulesInformation" xml:space="preserve">
    <value>&lt;a href=&quot;http://go.microsoft.com/fwlink/?LinkID=518083&quot;&gt;추가 정보&lt;/a&gt;</value>
  </data>
  <data name="RemoteDebugProxyFileDoesNotExist" xml:space="preserve">
    <value>원격 디버그 프록시 &quot;{0}&quot;이(가) 없습니다.</value>
  </data>
  <data name="RemoteDebugProxyFolderDoesNotExist" xml:space="preserve">
    <value>RemoteDebugProxyFolder를 찾을 수 없습니다.</value>
  </data>
  <data name="TypingsToolTypingsInstallCompleted" xml:space="preserve">
    <value>IntelliSense에 대한 입력 파일을 설치했습니다.</value>
  </data>
  <data name="TypingsToolNotInstalledError" xml:space="preserve">
    <value>IntelliSense에 사용되는 입력 항목 패키지 관리자 도구를 찾을 수 없습니다.</value>
  </data>
  <data name="TypingsToolTypingsInstallErrorOccurred" xml:space="preserve">
    <value>IntelliSense에 사용되는 입력 항목을 설치하는 동안 오류가 발생했습니다.</value>
  </data>
  <data name="TypingsInfoBarSpan1" xml:space="preserve">
    <value>Node.js IntelliSense가</value>
  </data>
  <data name="TypingsInfoBarSpan2" xml:space="preserve">
    <value>입력 항목 폴더를</value>
  </data>
  <data name="TypingsInfoBarSpan3" xml:space="preserve">
    <value>프로젝트에 추가했습니다.</value>
  </data>
  <data name="TypingsOpenOptionsText" xml:space="preserve">
    <value>사용자 지정...</value>
  </data>
  <data name="StatusTypingsLoaded" xml:space="preserve">
    <value>Node.js IntelliSense 입력 항목 폴더가 최신 상태입니다.</value>
  </data>
  <data name="StatusTypingsLoading" xml:space="preserve">
    <value>Npm 패키지에 대한 Node.js IntelliSense 입력 항목을 로드하는 중...</value>
  </data>
  <data name="TypingsToolInstallFailed" xml:space="preserve">
    <value>IntelliSense에 사용되는 입력 항목 도구를 설치하지 못했습니다. Node.js가 제대로 설치되어 있는지 확인하세요.</value>
  </data>
  <data name="TypingsToolCouldNotStart" xml:space="preserve">
    <value>IntelliSense에 사용되는 입력 항목 도구를 시작할 수 없습니다.</value>
  </data>
  <data name="TypeScriptMinVersionNotInstalled" xml:space="preserve">
    <value>Node.js 도구에 TypeScript for Visual Studio {0} 이상이 필요합니다. TypeScript가 설치되어 있는지 확인하세요.</value>
  </data>
  <data name="ImportingProjectStatusText" xml:space="preserve">
    <value>프로젝트를 가져오는 중...</value>
  </data>
  <data name="ImportingProjectErrorStatusText" xml:space="preserve">
    <value>오류가 발생하여 프로젝트가 만들어지지 않았습니다.</value>
  </data>
  <data name="InteractiveWindowFailedToStartProcessErrorMessage" xml:space="preserve">
    <value>대화형 프로세스를 시작하지 못했습니다. {0}{1}{2}</value>
  </data>
  <data name="InteractiveWindowNoProcessErrorMessage" xml:space="preserve">
    <value>현재 대화형 창의 연결이 끊어졌습니다. 프로세스를 다시 설정하세요.</value>
  </data>
  <data name="InteractiveWindowProcessExitedMessage" xml:space="preserve">
    <value>프로세스가 종료되었습니다.</value>
  </data>
  <data name="InteractiveWindowTitle" xml:space="preserve">
    <value>Node.js 대화형 창</value>
  </data>
  <data name="ImportingProjectAccessErrorStatusText" xml:space="preserve">
    <value>일부 파일 경로에 액세스할 수 없습니다.{0}파일을 읽고 쓸 수 있는 위치로 소스 파일을 이동해 보세요.</value>
  </data>
  <data name="ImportingProjectUnexpectedErrorMessage" xml:space="preserve">
    <value>프로젝트를 만드는 동안 예기치 않은 오류 {0}이(가) 발생했습니다.</value>
  </data>
  <data name="NodeModulesCouldNotParsePackageJsonErrorMessageText" xml:space="preserve">
    <value>프로젝트에서 {0}을(를) 구문 분석할 수 없습니다. 오류를 수정하고 다시 시도하세요.</value>
  </data>
  <data name="NpmNotInstalledMessageCaption" xml:space="preserve">
    <value>Npm이 설치되어 있지 않습니다.</value>
  </data>
  <data name="NpmNotInstalledMessageText" xml:space="preserve">
    <value>npm.cmd를 찾을 수 없습니다. 최신 버전의 node.js가 설치되어 있고 프로젝트 속성에서 node.exe의 위치를 지정했거나 시스템 경로에서 이 파일을 사용할 수 있는지 확인하세요.

npm.cmd를 실행하는 동안 다음 오류가 발생했습니다.

{0}</value>
  </data>
  <data name="AzureRemoteDebugWaitCaption" xml:space="preserve">
    <value>Azure 원격 디버깅</value>
  </data>
  <data name="AzureRemoteDebugWaitMessage" xml:space="preserve">
    <value>{0}에서 Azure 웹 사이트에 연결하는 중입니다.</value>
  </data>
  <data name="AzureRemoveDebugCouldNotAttachToWebsiteErrorMessage" xml:space="preserve">
    <value>{0}의 Azure 웹 사이트에서 node.exe 프로세스에 연결할 수 없습니다.

web.config에서 websocket 디버그 프록시 정보를 검색하는 동안 오류가 발생했습니다.</value>
  </data>
  <data name="AzureRemoveDebugCouldNotAttachToWebsiteExceptionErrorMessage" xml:space="preserve">
    <value>다음 Azure 웹 사이트에 연결하지 못했습니다. {0}</value>
  </data>
  <data name="RemoteDebugCheckProxyAndPortErrorMessage" xml:space="preserve">
    <value>프로세스가 원격 디버그 프록시(RemoteDebug.js) 뒤에서 실행되고 있고 디버거 포트(기본값: {0})가 대상 호스트에서 열려 있는지 확인하세요.</value>
  </data>
  <data name="RemoteDebugCouldNotAttachErrorMessage" xml:space="preserve">
    <value>{0}{1}에서 Node.js 프로세스에 연결할 수 없습니다.

</value>
  </data>
  <data name="RemoteDebugEnableWebSocketsErrorMessage" xml:space="preserve">
    <value>디버그 구성에서 Azure 웹 사이트가 배포되어 있는지 확인하고 Azure 관리 포털에서 이 웹 사이트에 대해 웹 소켓을 사용하도록 설정되어 있는지 확인하세요.</value>
  </data>
  <data name="RemoteDebugUnsupportedPlatformErrorMessage" xml:space="preserve">
    <value>Node.js Microsoft Azure 응용 프로그램에 대한 원격 디버깅은 Windows 8 이상에서만 지원됩니다.</value>
  </data>
  <data name="DebugCouldNotResolveStartupFileErrorMessage" xml:space="preserve">
    <value>솔루션 탐색기에서 마우스 오른쪽 단추를 클릭하고 &apos;Node.js 시작 파일로 설정&apos;을 선택하거나 프로젝트 속성에서 구성을 수정하여 시작할 시작 파일을 선택하세요.</value>
  </data>
  <data name="DebugInterpreterDoesNotExistErrorMessage" xml:space="preserve">
    <value>&quot;{0}&quot; 해석기가 없습니다.</value>
  </data>
  <data name="DebugTypeScriptCombineNotSupportedWarningMessage" xml:space="preserve">
    <value>이 TypeScript 프로젝트에서 &apos;Javascript 출력을 파일에 결합&apos; 옵션을 사용하도록 설정했습니다. 이 옵션은 NTVS 디버거에서 지원되지 않으며 설정할 경우 중단점, 단계별 실행 및 디버그 도구 창의 동작이 불규칙해질 수 있습니다. 디버깅을 시작하시겠습니까?</value>
  </data>
  <data name="DebugWorkingDirectoryDoesNotExistErrorMessage" xml:space="preserve">
    <value>작업 디렉터리 &quot;{0}&quot;이(가) 없습니다.</value>
  </data>
  <data name="DependencyNodeLabelBundled" xml:space="preserve">
    <value>포함됨</value>
  </data>
  <data name="DependencyNodeLabelMissing" xml:space="preserve">
    <value>누락됨</value>
  </data>
  <data name="DependencyNodeLabelNotListed" xml:space="preserve">
    <value>{0}에 나열되지 않음</value>
  </data>
  <data name="DependencyNodeModuleDoesNotExist" xml:space="preserve">
    <value>모듈의 경로가 없습니다.
{0}</value>
  </data>
  <data name="ErrorInvalidLaunchUrl" xml:space="preserve">
    <value>시작 URL &apos;{0}&apos;이(가) 잘못되었습니다.</value>
  </data>
</root>
