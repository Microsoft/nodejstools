//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.NodejsTools {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.NodejsTools.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These tools are a free download for your version of Visual Studio that allow you to write, deploy and debug applications for Microsoft Azure in a range of programming languages..
        /// </summary>
        public static string AzureToolsInstallInstructions {
            get {
                return ResourceManager.GetString("AzureToolsInstallInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This project requires Microsoft Azure Tools for Visual Studio..
        /// </summary>
        public static string AzureToolsRequired {
            get {
                return ResourceManager.GetString("AzureToolsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your project can still be created, but some manual configuration of your project will be required and features may be missing or limited.
        ///
        ///We recommend installing the latest version of Microsoft Azure Tools for Visual Studio..
        /// </summary>
        public static string AzureToolsUpgradeInstructions {
            get {
                return ResourceManager.GetString("AzureToolsUpgradeInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your version of Microsoft Azure Tools is not supported by Node.js Tools for Visual Studio..
        /// </summary>
        public static string AzureToolsUpgradeRecommended {
            get {
                return ResourceManager.GetString("AzureToolsUpgradeRecommended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading published package list....
        /// </summary>
        public static string CatalogLoadingDefault {
            get {
                return ResourceManager.GetString("CatalogLoadingDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catalog retrieval aborted - npm.cmd not found.
        /// </summary>
        public static string CatalogLoadingNoNpm {
            get {
                return ResourceManager.GetString("CatalogLoadingNoNpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status.
        /// </summary>
        public static string CategoryStatus {
            get {
                return ResourceManager.GetString("CategoryStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string CategoryVersion {
            get {
                return ResourceManager.GetString("CategoryVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Continue
        ///Some manual steps will be required to configure your project..
        /// </summary>
        public static string ContinueWithoutAzureToolsUpgrade {
            get {
                return ResourceManager.GetString("ContinueWithoutAzureToolsUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger connection was closed..
        /// </summary>
        public static string DebuggerConnectionClosed {
            get {
                return ResourceManager.GetString("DebuggerConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update file contents..
        /// </summary>
        public static string DebuggerModuleUpdateFailed {
            get {
                return ResourceManager.GetString("DebuggerModuleUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the port used to communicate with the debugger.
        /// </summary>
        public static string DebuggerPort {
            get {
                return ResourceManager.GetString("DebuggerPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not show this warning again..
        /// </summary>
        public static string DontShowAgain {
            get {
                return ResourceManager.GetString("DontShowAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Download and install now
        ///You will need to restart Visual Studio after installation..
        /// </summary>
        public static string DownloadAndInstall {
            get {
                return ResourceManager.GetString("DownloadAndInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies environment variables to be set in the spawned process in the form:
        ///
        ///NAME1=value1
        ///NAME2=value2
        ///....
        /// </summary>
        public static string EnvironmentVariables {
            get {
                return ResourceManager.GetString("EnvironmentVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to start wizard: no automation object available..
        /// </summary>
        public static string ErrorNoDte {
            get {
                return ResourceManager.GetString("ErrorNoDte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do nothing (recommended).
        /// </summary>
        public static string IncludeNodeModulesCancelTitle {
            get {
                return ResourceManager.GetString("IncludeNodeModulesCancelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Including &apos;node_modules&apos; in your project is generally unnecessary, and may reduce Visual Studio&apos;s performance. You can continue to use and deploy packages from &apos;node_modules&apos; without including it in your project..
        /// </summary>
        public static string IncludeNodeModulesContent {
            get {
                return ResourceManager.GetString("IncludeNodeModulesContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This may be a long-running operation, during which Visual Studio will be unusable..
        /// </summary>
        public static string IncludeNodeModulesIncludeDescription {
            get {
                return ResourceManager.GetString("IncludeNodeModulesIncludeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include &apos;node_modules&apos; folder in project.
        /// </summary>
        public static string IncludeNodeModulesIncludeTitle {
            get {
                return ResourceManager.GetString("IncludeNodeModulesIncludeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;a href=&quot;http://go.microsoft.com/fwlink/?LinkID=518083&quot;&gt;More Information&lt;/a&gt;.
        /// </summary>
        public static string IncludeNodeModulesInformation {
            get {
                return ResourceManager.GetString("IncludeNodeModulesInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert Snippet.
        /// </summary>
        public static string InsertSnippet {
            get {
                return ResourceManager.GetString("InsertSnippet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid port number - the port should contain only digits..
        /// </summary>
        public static string InvalidPortNumber {
            get {
                return ResourceManager.GetString("InvalidPortNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the URL to open in the browser.  If unspecified http://localhost:port is used.\r\nIf a port is specified, it needs to be specified here as well..
        /// </summary>
        public static string LaunchUrlToolTip {
            get {
                return ResourceManager.GetString("LaunchUrlToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed locally or linked from global packages.
        /// </summary>
        public static string LinkStatusLinkedFromGlobal {
            get {
                return ResourceManager.GetString("LinkStatusLinkedFromGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linked or installed into project.
        /// </summary>
        public static string LinkStatusLinkedToProject {
            get {
                return ResourceManager.GetString("LinkStatusLinkedToProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed locally.
        /// </summary>
        public static string LinkStatusLocallyInstalled {
            get {
                return ResourceManager.GetString("LinkStatusLocallyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not applicable for sub-packages..
        /// </summary>
        public static string LinkStatusNotApplicableSubPackages {
            get {
                return ResourceManager.GetString("LinkStatusNotApplicableSubPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not linked to project.
        /// </summary>
        public static string LinkStatusNotLinkedToProject {
            get {
                return ResourceManager.GetString("LinkStatusNotLinkedToProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string LinkStatusUnknown {
            get {
                return ResourceManager.GetString("LinkStatusUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Full Path.
        /// </summary>
        public static string LongPathClickToCopy {
            get {
                return ResourceManager.GetString("LongPathClickToCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do nothing and &amp;never warn me again.
        /// </summary>
        public static string LongPathDoNothingAndDoNotWarnAgain {
            get {
                return ResourceManager.GetString("LongPathDoNothingAndDoNotWarnAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can re-enable the check in Tools → Options → Node.js Tools → General..
        /// </summary>
        public static string LongPathDoNothingAndDoNotWarnAgainDetail {
            get {
                return ResourceManager.GetString("LongPathDoNothingAndDoNotWarnAgainDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do nothing, but &amp;warn me next time it happens.
        /// </summary>
        public static string LongPathDoNothingButWarnNextTime {
            get {
                return ResourceManager.GetString("LongPathDoNothingButWarnNextTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;a href=&quot;#help&quot;&gt;Get more information&lt;/a&gt;.
        /// </summary>
        public static string LongPathFooter {
            get {
                return ResourceManager.GetString("LongPathFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide &amp;paths exceeding the limit.
        /// </summary>
        public static string LongPathHidePathsExceedingTheLimit {
            get {
                return ResourceManager.GetString("LongPathHidePathsExceedingTheLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run &apos;npm &amp;dedupe&apos; on the project.
        /// </summary>
        public static string LongPathNpmDedupe {
            get {
                return ResourceManager.GetString("LongPathNpmDedupe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In some cases, deduplicating packages can reduce the amount of nesting in node_modules sufficiently to resolve the issue..
        /// </summary>
        public static string LongPathNpmDedupeDetail {
            get {
                return ResourceManager.GetString("LongPathNpmDedupeDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unfortunately, running &apos;npm dedupe&apos; did not resolve the issue. Please consult the &lt;a href=&quot;#help&quot;&gt;documentation&lt;/a&gt; for other potential workarounds..
        /// </summary>
        public static string LongPathNpmDedupeDidNotHelp {
            get {
                return ResourceManager.GetString("LongPathNpmDedupeDidNotHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show &amp;paths exceeding the limit.
        /// </summary>
        public static string LongPathShowPathsExceedingTheLimit {
            get {
                return ResourceManager.GetString("LongPathShowPathsExceedingTheLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your project folder contains one or more paths that exceed the &lt;a href=&quot;#msdn&quot;&gt;260 character limit&lt;/a&gt;. Visual Studio &lt;a href=&quot;#uservoice&quot;&gt;does not fully support&lt;/a&gt; such projects. You may run into issues building and publishing your project, or interference with other Visual Studio and Node.js Tools features..
        /// </summary>
        public static string LongPathWarningText {
            get {
                return ResourceManager.GetString("LongPathWarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path Too Long Warning.
        /// </summary>
        public static string LongPathWarningTitle {
            get {
                return ResourceManager.GetString("LongPathWarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to milliseconds.
        /// </summary>
        public static string Milliseconds {
            get {
                return ResourceManager.GetString("Milliseconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string NewVersionNo {
            get {
                return ResourceManager.GetString("NewVersionNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not applicable for sub-packages.
        /// </summary>
        public static string NewVersionNotApplicableSubpackage {
            get {
                return ResourceManager.GetString("NewVersionNotApplicableSubpackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package catalog not yet retrieved.
        /// </summary>
        public static string NewVersionPackageCatalogNotRetrieved {
            get {
                return ResourceManager.GetString("NewVersionPackageCatalogNotRetrieved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string NewVersionUnknown {
            get {
                return ResourceManager.GetString("NewVersionUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes: {0}.
        /// </summary>
        public static string NewVersionYes {
            get {
                return ResourceManager.GetString("NewVersionYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments to Node.exe.
        /// </summary>
        public static string NodeExeArguments {
            get {
                return ResourceManager.GetString("NodeExeArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the options provided to node.exe, such as -e or -i..
        /// </summary>
        public static string NodeExeArgumentsDescription {
            get {
                return ResourceManager.GetString("NodeExeArgumentsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the options provided to node.exe, such as -e or -i..
        /// </summary>
        public static string NodeExeArgumentsToolTip {
            get {
                return ResourceManager.GetString("NodeExeArgumentsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your project is currently configured to look for Node.exe at &quot;{0}&quot; but the file does not exist..
        /// </summary>
        public static string NodeExeDoesntExist {
            get {
                return ResourceManager.GetString("NodeExeDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.exe path.
        /// </summary>
        public static string NodeExePath {
            get {
                return ResourceManager.GetString("NodeExePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the path to the node.exe executable..
        /// </summary>
        public static string NodeExePathDescription {
            get {
                return ResourceManager.GetString("NodeExePathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified Node.js interpreter does not exist..
        /// </summary>
        public static string NodeExePathNotFound {
            get {
                return ResourceManager.GetString("NodeExePathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the path to the node.exe executable..
        /// </summary>
        public static string NodeExePathToolTip {
            get {
                return ResourceManager.GetString("NodeExePathToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js does not appear to be installed.  Please download and install Node.js or specify the location of node.exe on the Project | Properties page..
        /// </summary>
        public static string NodejsNotInstalled {
            get {
                return ResourceManager.GetString("NodejsNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js has not been detected on your computer.
        /// </summary>
        public static string NodejsNotInstalledShort {
            get {
                return ResourceManager.GetString("NodejsNotInstalledShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of Node.js ({0}) is not supported. Please upgrade to Node.js v0.10.20 or later..
        /// </summary>
        public static string NodejsNotSupported {
            get {
                return ResourceManager.GetString("NodejsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Port.
        /// </summary>
        public static string NodejsPort {
            get {
                return ResourceManager.GetString("NodejsPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the port number used for process.env.port, if unspecified a random port is generated..
        /// </summary>
        public static string NodejsPortDescription {
            get {
                return ResourceManager.GetString("NodejsPortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the port number used for process.env.port, if unspecified a random port is generated..
        /// </summary>
        public static string NodejsPortToolTip {
            get {
                return ResourceManager.GetString("NodejsPortToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Tools for Visual Studio.
        /// </summary>
        public static string NodejsToolsForVisualStudio {
            get {
                return ResourceManager.GetString("NodejsToolsForVisualStudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (This package has no keywords.).
        /// </summary>
        public static string NoKeywordsInPackage {
            get {
                return ResourceManager.GetString("NoKeywordsInPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cancelled.
        /// </summary>
        public static string NpmCancelled {
            get {
                return ResourceManager.GetString("NpmCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cancelled with errors - see Output window for details.
        /// </summary>
        public static string NpmCancelledWithErrors {
            get {
                return ResourceManager.GetString("NpmCancelledWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} completed with errors - see Output window for details.
        /// </summary>
        public static string NpmCompletedWithErrors {
            get {
                return ResourceManager.GetString("NpmCompletedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Installations.
        /// </summary>
        public static string NpmNodePackageInstallation {
            get {
                return ResourceManager.GetString("NpmNodePackageInstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the node manages local or global npm package installations..
        /// </summary>
        public static string NpmNodePackageInstallationDescription {
            get {
                return ResourceManager.GetString("NpmNodePackageInstallationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string NpmNodePath {
            get {
                return ResourceManager.GetString("NpmNodePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base path in which npm packages are installed..
        /// </summary>
        public static string NpmNodePathDescription {
            get {
                return ResourceManager.GetString("NpmNodePathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Npm.
        /// </summary>
        public static string NpmOutputPaneTitle {
            get {
                return ResourceManager.GetString("NpmOutputPaneTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author.
        /// </summary>
        public static string NpmPackageAuthor {
            get {
                return ResourceManager.GetString("NpmPackageAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary or original author of package; there may also be additional contributors..
        /// </summary>
        public static string NpmPackageAuthorDescription {
            get {
                return ResourceManager.GetString("NpmPackageAuthorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string NpmPackageDescription {
            get {
                return ResourceManager.GetString("NpmPackageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package description..
        /// </summary>
        public static string NpmPackageDescriptionDescription {
            get {
                return ResourceManager.GetString("NpmPackageDescriptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (enter arguments above).
        /// </summary>
        public static string NpmPackageInstallHelpMessage {
            get {
                return ResourceManager.GetString("NpmPackageInstallHelpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundled Dependency.
        /// </summary>
        public static string NpmPackageIsBundledDependency {
            get {
                return ResourceManager.GetString("NpmPackageIsBundledDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not the package is a bundled dependency..
        /// </summary>
        public static string NpmPackageIsBundledDependencyDescription {
            get {
                return ResourceManager.GetString("NpmPackageIsBundledDependencyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dev Dependency.
        /// </summary>
        public static string NpmPackageIsDevDependency {
            get {
                return ResourceManager.GetString("NpmPackageIsDevDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not the package is a development dependency..
        /// </summary>
        public static string NpmPackageIsDevDependencyDescription {
            get {
                return ResourceManager.GetString("NpmPackageIsDevDependencyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listed As Dependency.
        /// </summary>
        public static string NpmPackageIsListedInParentPackageJson {
            get {
                return ResourceManager.GetString("NpmPackageIsListedInParentPackageJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not the package is listed as a package.json dependency..
        /// </summary>
        public static string NpmPackageIsListedInParentPackageJsonDescription {
            get {
                return ResourceManager.GetString("NpmPackageIsListedInParentPackageJsonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing.
        /// </summary>
        public static string NpmPackageIsMissing {
            get {
                return ResourceManager.GetString("NpmPackageIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not the package is a missing dependency..
        /// </summary>
        public static string NpmPackageIsMissingDescription {
            get {
                return ResourceManager.GetString("NpmPackageIsMissingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional Dependency.
        /// </summary>
        public static string NpmPackageIsOptionalDependency {
            get {
                return ResourceManager.GetString("NpmPackageIsOptionalDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not the package is an optional dependency..
        /// </summary>
        public static string NpmPackageIsOptionalDependencyDescription {
            get {
                return ResourceManager.GetString("NpmPackageIsOptionalDependencyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keywords.
        /// </summary>
        public static string NpmPackageKeywords {
            get {
                return ResourceManager.GetString("NpmPackageKeywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package keywords..
        /// </summary>
        public static string NpmPackageKeywordsDescription {
            get {
                return ResourceManager.GetString("NpmPackageKeywordsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link Status.
        /// </summary>
        public static string NpmPackageLinkStatus {
            get {
                return ResourceManager.GetString("NpmPackageLinkStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether a package has been linked from globally installed packages..
        /// </summary>
        public static string NpmPackageLinkStatusDescription {
            get {
                return ResourceManager.GetString("NpmPackageLinkStatusDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Name.
        /// </summary>
        public static string NpmPackageName {
            get {
                return ResourceManager.GetString("NpmPackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of package, as specified in its package.json..
        /// </summary>
        public static string NpmPackageNameDescription {
            get {
                return ResourceManager.GetString("NpmPackageNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newer Version Available.
        /// </summary>
        public static string NpmPackageNewVersionAvailable {
            get {
                return ResourceManager.GetString("NpmPackageNewVersionAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not a newer version of the package is available..
        /// </summary>
        public static string NpmPackageNewVersionAvailableDescription {
            get {
                return ResourceManager.GetString("NpmPackageNewVersionAvailableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string NpmPackagePath {
            get {
                return ResourceManager.GetString("NpmPackagePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location of package on disk..
        /// </summary>
        public static string NpmPackagePathDescription {
            get {
                return ResourceManager.GetString("NpmPackagePathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested Version.
        /// </summary>
        public static string NpmPackageRequestedVersionRange {
            get {
                return ResourceManager.GetString("NpmPackageRequestedVersionRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version of package requested in package.json belonging to parent package or project..
        /// </summary>
        public static string NpmPackageRequestedVersionRangeDescription {
            get {
                return ResourceManager.GetString("NpmPackageRequestedVersionRangeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Type.
        /// </summary>
        public static string NpmPackageType {
            get {
                return ResourceManager.GetString("NpmPackageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether package is global, or locally installed in your project, and whether or not it is a sub-package..
        /// </summary>
        public static string NpmPackageTypeDescription {
            get {
                return ResourceManager.GetString("NpmPackageTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string NpmPackageVersion {
            get {
                return ResourceManager.GetString("NpmPackageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed version of package..
        /// </summary>
        public static string NpmPackageVersionDescription {
            get {
                return ResourceManager.GetString("NpmPackageVersionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} completed with errors.
        /// </summary>
        public static string NpmReplCommandCompletedWithErrors {
            get {
                return ResourceManager.GetString("NpmReplCommandCompletedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing: {0}.
        /// </summary>
        public static string NpmStatusExecuting {
            get {
                return ResourceManager.GetString("NpmStatusExecuting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors Encountered ({1}) - Executing: {0}.
        /// </summary>
        public static string NpmStatusExecutingErrors {
            get {
                return ResourceManager.GetString("NpmStatusExecutingErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing: {0} ({1} command(s) queued).
        /// </summary>
        public static string NpmStatusExecutingQueued {
            get {
                return ResourceManager.GetString("NpmStatusExecutingQueued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors Encountered ({2}) - Executing: {0} ({1} command(s) queued).
        /// </summary>
        public static string NpmStatusExecutingQueuedErrors {
            get {
                return ResourceManager.GetString("NpmStatusExecutingQueuedErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready.
        /// </summary>
        public static string NpmStatusReady {
            get {
                return ResourceManager.GetString("NpmStatusReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready - Command(s) completed with errors ({0}).
        /// </summary>
        public static string NpmStatusReadyWithErrors {
            get {
                return ResourceManager.GetString("NpmStatusReadyWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} successfully completed.
        /// </summary>
        public static string NpmSuccessfullyCompleted {
            get {
                return ResourceManager.GetString("NpmSuccessfullyCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Today at {0:t}.
        /// </summary>
        public static string PackageCatalogRefresh0Days {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh0Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yesterday at {0:t}.
        /// </summary>
        public static string PackageCatalogRefresh1Day {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh1Day", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 1 month ago.
        /// </summary>
        public static string PackageCatalogRefresh1Month {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh1Month", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 1 week ago.
        /// </summary>
        public static string PackageCatalogRefresh1Week {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh1Week", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} days ago.
        /// </summary>
        public static string PackageCatalogRefresh2To7Days {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh2To7Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 2 weeks ago.
        /// </summary>
        public static string PackageCatalogRefresh2Weeks {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh2Weeks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 3 months ago.
        /// </summary>
        public static string PackageCatalogRefresh3Months {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh3Months", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 3 weeks ago.
        /// </summary>
        public static string PackageCatalogRefresh3Weeks {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh3Weeks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Far too long ago.
        /// </summary>
        public static string PackageCatalogRefresh6Months {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh6Months", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh failed - see output below for details.
        /// </summary>
        public static string PackageCatalogRefreshFailed {
            get {
                return ResourceManager.GetString("PackageCatalogRefreshFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently refreshing.
        /// </summary>
        public static string PackageCatalogRefreshing {
            get {
                return ResourceManager.GetString("PackageCatalogRefreshing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - info for {0} packages retrieved.
        /// </summary>
        public static string PackageCount {
            get {
                return ResourceManager.GetString("PackageCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global.
        /// </summary>
        public static string PackageInstallationGlobal {
            get {
                return ResourceManager.GetString("PackageInstallationGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local.
        /// </summary>
        public static string PackageInstallationLocal {
            get {
                return ResourceManager.GetString("PackageInstallationLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed globally.
        /// </summary>
        public static string PackageInstalledGlobally {
            get {
                return ResourceManager.GetString("PackageInstalledGlobally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old version {0} installed globally.
        /// </summary>
        public static string PackageInstalledGloballyOldVersion {
            get {
                return ResourceManager.GetString("PackageInstalledGloballyOldVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed locally.
        /// </summary>
        public static string PackageInstalledLocally {
            get {
                return ResourceManager.GetString("PackageInstalledLocally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old version {0} installed locally.
        /// </summary>
        public static string PackageInstalledLocallyOldVersion {
            get {
                return ResourceManager.GetString("PackageInstalledLocallyOldVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - {0} matching packages.
        /// </summary>
        public static string PackageMatchCount {
            get {
                return ResourceManager.GetString("PackageMatchCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global.
        /// </summary>
        public static string PackageTypeGlobal {
            get {
                return ResourceManager.GetString("PackageTypeGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global sub-package.
        /// </summary>
        public static string PackageTypeGlobalSubpackage {
            get {
                return ResourceManager.GetString("PackageTypeGlobalSubpackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local.
        /// </summary>
        public static string PackageTypeLocal {
            get {
                return ResourceManager.GetString("PackageTypeLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local sub-package.
        /// </summary>
        public static string PackageTypeLocalSubpackage {
            get {
                return ResourceManager.GetString("PackageTypeLocalSubpackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global npm Packages Properties.
        /// </summary>
        public static string PropertiesClassGlobal {
            get {
                return ResourceManager.GetString("PropertiesClassGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Package Properties.
        /// </summary>
        public static string PropertiesClassGlobalPackage {
            get {
                return ResourceManager.GetString("PropertiesClassGlobalPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Sub-Package Properties.
        /// </summary>
        public static string PropertiesClassGlobalSubPackage {
            get {
                return ResourceManager.GetString("PropertiesClassGlobalSubPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Package Properties.
        /// </summary>
        public static string PropertiesClassLocalPackage {
            get {
                return ResourceManager.GetString("PropertiesClassLocalPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Sub-Package Properties.
        /// </summary>
        public static string PropertiesClassLocalSubPackage {
            get {
                return ResourceManager.GetString("PropertiesClassLocalSubPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to npm Packages Properties.
        /// </summary>
        public static string PropertiesClassNpm {
            get {
                return ResourceManager.GetString("PropertiesClassNpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js interactive window. Type .help for a list of commands..
        /// </summary>
        public static string ReplInitializationMessage {
            get {
                return ResourceManager.GetString("ReplInitializationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string RequestedVersionRangeNone {
            get {
                return ResourceManager.GetString("RequestedVersionRangeNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the arguments passed to the script on launch..
        /// </summary>
        public static string ScriptArgumentsToolTip {
            get {
                return ResourceManager.GetString("ScriptArgumentsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the script run on launch..
        /// </summary>
        public static string ScriptFileTooltip {
            get {
                return ResourceManager.GetString("ScriptFileTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to seconds.
        /// </summary>
        public static string Seconds {
            get {
                return ResourceManager.GetString("Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checked a web browser is opened on launch.
        /// </summary>
        public static string StartBrowserToolTip {
            get {
                return ResourceManager.GetString("StartBrowserToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cached Node.js analysis loaded..
        /// </summary>
        public static string StatusAnalysisLoaded {
            get {
                return ResourceManager.GetString("StatusAnalysisLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading cached Node.js analysis failed..
        /// </summary>
        public static string StatusAnalysisLoadFailed {
            get {
                return ResourceManager.GetString("StatusAnalysisLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading cached Node.js analysis for project....
        /// </summary>
        public static string StatusAnalysisLoading {
            get {
                return ResourceManager.GetString("StatusAnalysisLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js analysis saved to disk.
        /// </summary>
        public static string StatusAnalysisSaved {
            get {
                return ResourceManager.GetString("StatusAnalysisSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving Node.js analysis to disk....
        /// </summary>
        public static string StatusAnalysisSaving {
            get {
                return ResourceManager.GetString("StatusAnalysisSaving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js code analysis is up to date, analyzed {0:N0} function(s) in {1}.
        /// </summary>
        public static string StatusAnalysisUpToDate {
            get {
                return ResourceManager.GetString("StatusAnalysisUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Surround With.
        /// </summary>
        public static string SurroundWith {
            get {
                return ResourceManager.GetString("SurroundWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Framework.
        /// </summary>
        public static string TestFramework {
            get {
                return ResourceManager.GetString("TestFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the test framework this file applies to..
        /// </summary>
        public static string TestFrameworkDescription {
            get {
                return ResourceManager.GetString("TestFrameworkDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaced &lt;EnvironmentVariables&gt; property with &lt;Environment&gt;. This project will no longer work with NTVS 1.0 beta 2 or below..
        /// </summary>
        public static string UpgradedEnvironmentVariables {
            get {
                return ResourceManager.GetString("UpgradedEnvironmentVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified working directory is invalid or missing..
        /// </summary>
        public static string WorkingDirInvalidOrMissing {
            get {
                return ResourceManager.GetString("WorkingDirInvalidOrMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the working directory where the node.exe process is launched..
        /// </summary>
        public static string WorkingDirToolTip {
            get {
                return ResourceManager.GetString("WorkingDirToolTip", resourceCulture);
            }
        }
    }
}
